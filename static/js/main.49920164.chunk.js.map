{"version":3,"sources":["components/Header.js","pages/Home.js","pages/Contact.js","pages/Projects.js","pages/Tech.js","pages/Resources.js","pages/About.js","components/Nav.js","components/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["Header","class","Home","className","id","handleSubmit","Contact","onSubmit","type","value","Projects","Tech","Resources","About","Nav","activeClass","to","spy","smooth","offset","duration","Sidebar","App","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6SAYeA,G,MATA,WACd,OACC,yBAAKC,MAAM,eACV,yBAAKA,MAAM,gBACX,6CCIYC,EARF,WACZ,OACC,yBAAKC,UAAU,aACd,wBAAIC,GAAG,QAAP,gBCYGC,EAAe,aAENC,EAhBC,WACf,OACC,6BACC,0BAAMC,SAAUF,GACf,uCAEC,2BAAOG,KAAK,UAEb,2BAAOA,KAAK,SAASC,MAAM,cCNhBC,EAJE,WAChB,OAAO,kECOOC,EARF,WACZ,OACC,6BACC,8DCKYC,EARG,WACjB,OACC,6BACC,mECKYC,EARD,WACZ,OACE,6BACE,+DCqCSC,EAvCH,WACX,OACC,yBAAKb,MAAM,YACV,wBAAIE,UAAU,YACb,4BACC,kBAAC,IAAD,CAAMY,YAAY,SAASC,GAAG,IAAIC,KAAK,EAAMC,QAAQ,EAAMC,QAAS,GAAIC,SAAU,KAAlF,SAID,4BACC,kBAAC,IAAD,CAAML,YAAY,SAASC,GAAG,SAASC,KAAK,EAAMC,QAAQ,EAAMC,QAAS,GAAIC,SAAU,KAAvF,UAID,4BACC,kBAAC,IAAD,CAAML,YAAY,SAASC,GAAG,UAAUC,KAAK,EAAMC,QAAQ,EAAMC,QAAS,GAAIC,SAAU,KAAxF,YAID,4BACC,kBAAC,IAAD,CAAML,YAAY,SAASC,GAAG,YAAYC,KAAK,EAAMC,QAAQ,EAAMC,QAAS,GAAIC,SAAU,KAA1F,aAID,4BACC,kBAAC,IAAD,CAAML,YAAY,SAASC,GAAG,QAAQC,KAAK,EAAMC,QAAQ,EAAMC,QAAS,GAAIC,SAAU,KAAtF,SAID,4BACC,kBAAC,IAAD,CAAML,YAAY,SAASC,GAAG,aAAaC,KAAK,EAAMC,QAAQ,EAAMC,QAAS,GAAIC,SAAU,KAA3F,iBCrBUC,EAVC,WACf,OACC,yBAAKlB,UAAU,gBACd,yBAAKF,MAAM,WACV,2CCgCWqB,E,iLArBb,OACC,kBAAC,IAAD,KACC,yBAAKnB,UAAU,OACd,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,IAAIC,UAAWvB,IACjC,kBAAC,IAAD,CAAOqB,OAAK,EAACC,KAAK,WAAWC,UAAWnB,IACxC,kBAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,YAAYC,UAAWf,IACzC,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,QAAQC,UAAWd,IACrC,kBAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,aAAaC,UAAWb,IAC1C,kBAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,SAASC,UAAWZ,KAEvC,yBAAKV,UAAU,eACd,4BAAQA,UAAU,UAAlB,kC,GAhBauB,aCHEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.49920164.chunk.js","sourcesContent":["import React from 'react';\r\nimport Image from 'react';\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<div class=\"header-cont\">\r\n\t\t\t<div class=\"header-logo\" />\r\n\t\t\t<h1>Polar Tech</h1>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport Header from '../components/Header';\r\n\r\nconst Home = () => {\r\n\treturn (\r\n\t\t<div className=\"home-comp\">\r\n\t\t\t<h1 id=\"home\">Hello Home</h1>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\n\r\nimport Home from './Home';\r\n\r\nconst Contact = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<label>\r\n\t\t\t\t\tName:\r\n\t\t\t\t\t<input type=\"text\" />\r\n\t\t\t\t</label>\r\n\t\t\t\t<input type=\"submit\" value=\"Submit\" />\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst handleSubmit = () => {};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\n\r\nconst Projects = () => {\r\n\treturn <div>This is the projects information</div>;\r\n};\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\n\r\nconst Tech = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>This is the tech information</h1>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Tech;\r\n","import React from 'react';\r\n\r\nconst Resources = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>This is the resources information</h1>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Resources;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1>This is the about information</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Nav = () => {\r\n\treturn (\r\n\t\t<div class=\"nav-cont\">\r\n\t\t\t<ul className=\"nav-list\">\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link activeClass=\"active\" to=\"/\" spy={true} smooth={true} offset={-70} duration={500}>\r\n\t\t\t\t\t\tHome\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link activeClass=\"active\" to=\"/about\" spy={true} smooth={true} offset={-70} duration={500}>\r\n\t\t\t\t\t\tAbout\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link activeClass=\"active\" to=\"contact\" spy={true} smooth={true} offset={-70} duration={500}>\r\n\t\t\t\t\t\tContact\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link activeClass=\"active\" to=\"/projects\" spy={true} smooth={true} offset={-70} duration={500}>\r\n\t\t\t\t\t\tProjects\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link activeClass=\"active\" to=\"/tech\" spy={true} smooth={true} offset={-70} duration={500}>\r\n\t\t\t\t\t\tTech\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link activeClass=\"active\" to=\"/resources\" spy={true} smooth={true} offset={-70} duration={500}>\r\n\t\t\t\t\t\tResources\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\n\r\nconst Sidebar = () => {\r\n\treturn (\r\n\t\t<div className=\"sidebar-cont\">\r\n\t\t\t<div class=\"sidebar\">\r\n\t\t\t\t<h1>Articles</h1>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\nimport { Link, animateScroll as scroll } from 'react-scroll';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Component } from 'react';\nimport './App.css';\nimport Contact from './pages/Contact';\nimport Home from './pages/Home';\nimport Projects from './pages/Projects';\nimport Tech from './pages/Tech';\nimport Resources from './pages/Resources';\nimport About from './pages/About';\nimport Header from './components/Header';\nimport Nav from './components/Nav';\nimport Sidebar from './components/Sidebar';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<Nav />\n\t\t\t\t\t<Sidebar />\n\t\t\t\t\t<Header />\n\t\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t\t<Route exact path=\"/contact\" component={Contact} />\n\t\t\t\t\t<Route exact path=\"/projects\" component={Projects} />\n\t\t\t\t\t<Route exact path=\"/tech\" component={Tech} />\n\t\t\t\t\t<Route exact path=\"/resources\" component={Resources} />\n\t\t\t\t\t<Route exact path=\"/about\" component={About} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"footer-cont\">\n\t\t\t\t\t<footer className=\"footer\">2019 &#169; Stephon Patton</footer>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}